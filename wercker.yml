box: maven:latest
build:
  steps:
    - xenoterracide/maven:
        goals: package spring-boot:repackage
    - script:
        name: copy package to output
        code: |
          cp ./target/*.jar $WERCKER_OUTPUT_DIR/cloud-ci-vergleich.jar
deploy:
  box:
    id: openjdk
    tag: 8-jre-alpine
    cmd: /bin/sh
  steps:
    - script:
      code: |
        mv $WERCKER_SOURCE_DIR/cloud-ci-vergleich.jar /cloud-ci-vergleich.jar
        touch /cloud-ci-vergleich.jar
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        tag: latest
        repository: $DOCKER_REPOSITORY
        ports: "8080"
        volumes: "/tmp"
        entrypoint: java -Djava.security.egd=file:/dev/./urandom -jar /cloud-ci-vergleich.jar
    - script:
      code: |
        touch  $WERCKER_OUTPUT_DIR/deploy-me
update-deplyoment:
  steps:
    - script:
      name: Update OCCS deployment
      code: |
        DEPLOYMENT_CONFIG='{
          "deployment_id":"'"$OCCS_DEPLOYMENT_ID"'",
           "deployment_name":"'"$OCCS_DEPLOYMENT_ID"'",
           "desired_state":1,
           "placement":{"pool_id":"default"},
           "quantities":{"DevOpsDemo":1},
           "stack": {
             "service_id": "DevOpsDemo",
             "service_name": "DevOpsDemo",
             "subtype": "service",
             "content": "version: 2\nservices:\n  DevOpsDemo:\n    image: marcobuss/cloud-ci-oracle\n    environment:\n      - \"occs:availability=per-pool\"\n      - \"occs:scheduler=random\"\n      - \"occs:description=Demo Project to show Wercker integration\"\n    ports:\n      - \"8080:8080/tcp\"\n"
           }
        }'

        STATUS=$(curl -sk -o /dev/null -w '%{http_code}' -X "GET" -H "Authorization: Bearer ${OCCS_API_KEY}" "${OCCS_BASE_URL}/api/v2/deployments/${OCCS_DEPLOYMENT_ID}")
        echo "Queried Deployment and get response ${STATUS}"
        if [ $STATUS -eq 200 ]; then
          echo "Reload Container Deployment"
          RESET_URL="$(curl -sk -X "PUT" -H "Authorization: Bearer ${OCCS_API_KEY}" "${OCCS_BASE_URL}/api/v2/deployments/${OCCS_DEPLOYMENT_ID}/webhook/restart" -d '{"enabled":true}' | grep full_url_path | cut -d'"' -f4)"
          echo "Reset URL: ${OCCS_BASE_URL}${RESET_URL}"
          curl -sk -X "POST" "${OCCS_BASE_URL}${RESET_URL}"
          break
        else
          echo "Try to create new deployment"
          curl -sk -X "POST" -H "Authorization: Bearer ${OCCS_API_KEY}" "${OCCS_BASE_URL}/api/v2/deployments/" -d "${DEPLOYMENT_CONFIG}"
        fi


